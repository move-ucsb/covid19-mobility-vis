{"version":3,"sources":["webpack://my-gatsby-site/./src/components/trivar/scatterPlot.tsx","webpack://my-gatsby-site/./src/components/trivar/scatterView.tsx","webpack://my-gatsby-site/./src/components/scatter/stateSelection.tsx","webpack://my-gatsby-site/./src/components/scatter/dropdown.tsx","webpack://my-gatsby-site/./src/pages/scatter.tsx"],"names":["Container","styled","Title","MapContainer","getStateFips","fips","Number","String","slice","ScatterPlot","data","title","selectedState","size","margin","height","d3Container","useRef","useEffect","svg","d3","current","map_g","attr","append","xAxis","domain","range","call","yAxis","width","text","dataToPlot","Object","values","map","d","count","hot","cold","x","recent","y","reduce","result","key","push","getData","line","selectAll","sequential","enter","coldScale","hotScale","style","undefined","find","f","sel","arr","countiesInState","countiesInPoint","filter","_","i","avg","length","a","b","ref","ScatterView","useContext","LisaContext","mapData","mapTitles","StateSelection","highlightedState","stateSelector","addState","translate","projection","scale","map_path","MapZoom","topojson","countiesMap","features","id","properties","name","on","this","getAttribute","DropDownContainer","ButtonContainer","Button","DropDown","statevals","statesMap","includes","sort","localeCompare","htmlFor","onChange","value","currentTarget","selectedOptions","target","onClick","SelectionContainer","TextContainer","Text","Divider","Scatter","useState","setSelectedState","Array","mapZoom","setMapZoom","reset","m","currId","select","selectedPage","to"],"mappings":"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","file":"component---src-pages-scatter-tsx-99de2ec8cbcd86b94163.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport * as d3 from \"d3\";\n\nimport Sparse from \"../../utility/sparse\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin: 10px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n`;\n\nconst MapContainer = styled.svg`\n  height: 330px;\n`;\n\nconst getData = (data) =>\n  Object.values(\n    data\n      .map((d) => {\n        const [hot, cold] = d.count();\n        return {\n          x:\n            (hot > cold ? d.recent()[0] : d.recent()[1]),\n          y: hot > cold ? hot : cold,\n          hot: hot > cold,\n          fips: d.fips,\n        };\n      })\n      .reduce((result, { x, y, fips, hot }) => {\n        const key = `${x},${y}`;\n\n        if (key in result) {\n          result[key].fips.push(fips);\n          result[key].hot.push(hot);\n        } else {\n          result[key] = {\n            x,\n            y,\n            fips: [fips],\n            hot: [hot],\n          };\n        }\n        return result;\n      }, {})\n  );\n\nconst getStateFips = (fips: number): number => {\n  return Number(String(fips).slice(0, -3));\n};\n\ntype Props = {\n  title: string;\n  selectedState: [number, string];\n  data: Array<Sparse>;\n};\n\nconst average = (arr: Array<number>) => {\n  return arr.reduce((a, b) => a + b) / arr.length;\n};\n\nconst subset = (vals: Array<number>, sel: Array<boolean>) => {\n  return vals.filter((_, i) => sel[i])\n}\n\nexport default function ScatterPlot({\n  data,\n  title,\n  selectedState,\n}: Props) {\n  const size = 380;\n  const scale = 1;\n  const margin = [50, 50];\n\n  const height = size - 2 * 50;\n  const width = size - 2 * 50;\n\n  const d3Container = useRef(null);\n\n  useEffect(() => {\n    const svg = d3.select(d3Container.current);\n\n    const map_g = svg\n      .attr(\"width\", size)\n      .attr(\"height\", size - 40)\n      .append(\"g\")\n      .attr(\"scale\", 10)\n      .attr(\"transform\", `translate(${margin[0]}, ${margin[1] - 40})`);\n\n    const xAxis = d3.scaleLinear().domain([0, 52]).range([0, width]);\n\n    map_g\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(d3.axisBottom(xAxis));\n\n    const yAxis = d3.scaleLinear().domain([0, 52]).range([height, 0]);\n\n    map_g.append(\"g\").call(d3.axisLeft(yAxis));\n\n    svg\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width / 2 + 100)\n      .attr(\"y\", height + 85 - 40)\n      .text(\"Week Number\");\n\n    svg\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", -35 - height / 2)\n      .attr(\"y\", 10)\n      .attr(\"dy\", \"0.75em\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(\"Count\");\n\n    const dataToPlot = getData(data);\n\n    const line = d3\n      .line()\n      .x(({ x }) => xAxis(x))\n      .y(({ y }) => yAxis(y));\n\n    // lines\n    // does all calculations at once then turns on later\n    map_g\n      .selectAll(\"myLines\")\n      .data(\n        data.map((d) => {\n          const [hot, cold] = d.count();\n          return {\n            data: hot > cold ? d.sequential(1) : d.sequential(2),\n            hot: hot > cold,\n            fips: d.fips,\n          };\n        })\n      )\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"seq\")\n      .attr(\"stroke\", \"none\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"stroke-opacity\", 0.15)\n      .attr(\"d\", (d) => line(d.data));\n\n    map_g\n      .selectAll(\"dot\")\n      .data(dataToPlot)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"cx\", ({ x }) => xAxis(x))\n      .attr(\"cy\", ({ y }) => yAxis(y))\n      .attr(\"r\", 2)\n  }, []);\n\n  useEffect(() => {\n    const coldScale = d3.interpolateBlues;\n    const hotScale = d3.interpolateReds;\n\n    d3.select(d3Container.current)\n      .selectAll(\".point\")\n      .style(\"fill-opacity\", ({ fips }) => {\n        return selectedState[0] === -1 ||\n          fips.find((f) => getStateFips(f) === selectedState[0]) !== undefined\n          ? 1\n          : 0.1;\n      })\n      .style(\"fill\", ({ hot, fips }) => {\n        const countiesInState = fips.map(f => selectedState[0] === -1 || getStateFips(f) === selectedState[0]);\n        const countiesInPoint = subset(hot, countiesInState)\n        const avg = average(countiesInPoint.length ? countiesInPoint : hot);\n        return avg > 0.5 ? hotScale(avg) : coldScale(1 - avg); // make sure 1 - avg never is 0\n      });\n\n    d3.select(d3Container.current)\n      .selectAll(\".seq\")\n      .style(\"stroke\", ({ fips, hot }) => {\n        return getStateFips(fips) === selectedState[0] ? (hot ? \"#FF0000\" : \"#0000FF\") : \"none\";\n      });\n  }, [selectedState]);\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <MapContainer ref={d3Container} />\n    </Container>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport Sparse from \"../../utility/sparse\";\nimport ScatterPlot from \"./scatterPlot\";\nimport { LisaContext } from \"../../contexts/lisaContext\"\n\ntype Props = {\n  selectedState: [number, string];\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport default function ScatterView({\n  selectedState\n}: Props) {\n  const { mapData, mapTitles } = useContext(LisaContext)\n  return (\n    <Container>\n      {mapTitles.map((title, i) => {\n        return (\n          <ScatterPlot\n            key={i}\n            title={title}\n            selectedState={selectedState}\n            data={mapData ? mapData[i] : null}\n          />\n        );\n      })}\n    </Container>\n  );\n}\n","import React, { useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\nimport MapZoom from \"../../utility/mapZoom\";\n\nimport countiesMap from \"us-atlas/counties-10m.json\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin: 10px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n`;\n\nconst MapContainer = styled.svg`\n  g {\n    background-color: light-gray;\n    fill: red;\n  }\n  border: 1px solid black;\n`;\n\ntype Props = {\n  highlightedState: [number, string];\n  stateSelector: ([a, b]: [number, string]) => void;\n  addState: (m: MapZoom) => void;\n};\n\nexport default function StateSelection({\n  highlightedState,\n  stateSelector,\n  addState,\n}: Props) {\n  const width = 380;\n  const height = 250;\n  const translate: [number, number] = [width / 2, height / 2];\n  const scale = 500;\n\n  const d3Container = useRef(null);\n\n  const projection = d3.geoAlbers().scale(scale).translate(translate);\n  const map_path = d3.geoPath().projection(projection);\n\n  useEffect(() => {\n    const map_g = d3\n      .select(d3Container.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\");\n\n    addState(new MapZoom(map_path, map_g, width, height, highlightedState[0]));\n\n    // States:\n    map_g\n      .append(\"g\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"0.5px\")\n      .style(\"fill\", \"#ffffffff\")\n      .selectAll(\"path\")\n      .data(topojson.feature(countiesMap, countiesMap.objects.states).features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", map_path as any)\n      .attr(\"stateFips\", ({ id }) => Number(id))\n      .attr(\"stateName\", ({ properties: { name } }) => name);\n  }, []);\n\n  useEffect(() => {\n    d3.select(d3Container.current)\n      .selectAll(\"path\")\n      .on(\"click\", function () {\n        stateSelector([\n          Number(this.getAttribute(\"stateFips\")),\n          this.getAttribute(\"stateName\"),\n        ]);\n      })\n      .style(\"fill\",  function () {\n        return Number(this.getAttribute(\"stateFips\")) === highlightedState[0] ? \"rgb(0,54,96)\" : \"#ffffffff\"\n      })\n  }, [highlightedState]);\n\n  return (\n    <Container>\n      <MapContainer ref={d3Container} />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport statesMap from \"us-atlas/states-10m.json\";\nconst DropDownContainer = styled.div`\n  width: 400px;\n  padding: 10px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n\ntype Props = {\n  selectedState: [number, string];\n  stateSelector: ([a, b]: [number, string]) => void;\n};\n\nconst Button = styled.button`\n  border-radius: 10px;\n  height: 30px;\n  width: 60px;\n`;\n\nexport default function DropDown({ stateSelector, selectedState }: Props) {\n  const statevals = [\n    ...statesMap.objects.states.geometries.filter(\n      ({ properties: { name } }) =>\n        ![\n          \"Alaska\",\n          \"Hawaii\",\n          \"Guam\",\n          \"Puerto Rico\",\n          \"American Samoa\",\n          \"United States Virgin Islands\",\n          \"Commonwealth of the Northern Mariana Islands\",\n          \"District of Columbia\",\n        ].includes(name)\n    ),\n    { id: -1, properties: { name: \"United States\" } },\n  ].sort((a, b) => {\n    if (a.id === -1) {\n      return -1;\n    } else if (b.id === -1) {\n      return 1;\n    }\n    return a.properties.name.localeCompare(b.properties.name);\n  });\n  return (\n    <DropDownContainer>\n      <p>Select a state from the drop down or by clicking on the map.</p>\n      <ButtonContainer>\n        <div>\n          {\" \"}\n          <label htmlFor=\"states\">Choose a State:</label>\n          {\"\"}\n          <select\n            id=\"states\"\n            onChange={({\n              currentTarget: { value },\n              target: { selectedOptions },\n            }) => {\n              stateSelector([Number(value), selectedOptions[0].text]);\n            }}\n            value={selectedState[0]}\n          >\n            {statevals.map(({ id, properties: { name } }) => {\n              return (\n                <option value={Number(id)} key={id}>\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <Button onClick={() => stateSelector([-1, \"\"])}>Reset</Button>\n      </ButtonContainer>\n      <p>Selecting a state will highlight that states' counties in the scatter plot below and show the cumulative trajectory over the year.</p>\n    </DropDownContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport MapView from \"../components/trivar/mapView\";\nimport ScatterView from \"../components/trivar/scatterView\";\nimport Slider from \"../components/trivar/slider\";\nimport Page from \"../components/page\";\n\nimport MapZoom from \"../utility/mapZoom\";\n\nimport StateSelection from \"../components/scatter/stateSelection\";\nimport DropDown from \"../components/scatter/dropdown\";\nimport { Link } from \"gatsby\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst SelectionContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  width: 100%;\n\n  & > h1 {\n    margin: 5px 5px 0 5px;\n  }\n`;\n\nconst Text = styled.p`\n  margin: 5px;\n`;\nconst Divider = styled.hr`\n  width: 98%;\n  height: 1px;\n  background-color: black;\n  border-radius: 1px;\n  margin: 5px 10px;\n`;\nexport default function Scatter() {\n  const [selectedState, setSelectedState] = useState<[number, string]>([\n    -1,\n    \"\",\n  ]);\n\n  const [mapZoom, setMapZoom] = useState(Array<MapZoom>(1));\n\n  const addState = (m: MapZoom) => {\n    mapZoom[0] = m;\n    setMapZoom(mapZoom);\n  };\n\n  const stateSelector = (\n    [id, name]: [number, string],\n    reset: boolean = false\n  ) => {\n    const m = mapZoom[0];\n\n    if (!reset && id !== m.currId && id !== -1) {\n      m.select(id);\n      setSelectedState([id, name]);\n      return true;\n    } else {\n      m.reset();\n      setSelectedState([-1, \"\"]);\n      return false;\n    }\n  };\n\n  return (\n    <Page selectedPage=\"Scatter\">\n      <Container>\n        <TextContainer>\n          <h1>Scatter Plots</h1>\n          <Text>\n            This page provides an alternative view to{\" \"}\n            <Link to=\"/static\">the static choropleth plots page</Link>.\n          </Text>\n          <Text>\n            The scatter plots below show the number of times a county was a hot\n            spot or cold spot vs the last week number it was a significant\n            value. Each point on the scatter plot represents the counties at the\n            specified count and week number. Since multiple counties can be at\n            the same location, the point is color blue if the majority of the\n            counties were cold spots and red if the majority were hot spots. A\n            darker colored point shows a higher proportion of counties being hot\n            or cold spots.\n          </Text>\n        </TextContainer>\n        <Divider />\n        <SelectionContainer>\n          <DropDown\n            stateSelector={stateSelector}\n            selectedState={selectedState}\n          />\n          <StateSelection\n            highlightedState={selectedState}\n            stateSelector={stateSelector}\n            addState={addState}\n          />\n        </SelectionContainer>\n        <Divider />\n        <ScatterView selectedState={selectedState} />\n        <Divider />\n        <TextContainer>\n          <Text></Text>\n        </TextContainer>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}