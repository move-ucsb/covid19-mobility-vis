{"version":3,"sources":["webpack://my-gatsby-site/./src/components/trivar/cards.tsx","webpack://my-gatsby-site/./src/contexts/mapsContext.tsx","webpack://my-gatsby-site/./src/components/trivar/map.tsx","webpack://my-gatsby-site/./src/components/trivar/mapView.tsx","webpack://my-gatsby-site/./src/pages/static.tsx"],"names":["Container","styled","Title","Text","Row","Card","title","hcount","ccount","hrecent","crecent","MapsContext","createContext","Maps","children","states","topojson","countiesMap","features","counties","Provider","value","MapContainer","county","border","getStateFips","fips","Number","String","slice","MapSettings","highlightedState","highlightedCounty","addState","stateSelector","countySelector","data","time","colorScales","hotScale","coldScale","getRadius","width","height","translate","scale","d3Container","useRef","projection","d3","map_path","useContext","useEffect","map_g","current","attr","append","MapZoom","style","selectAll","enter","id","objects","geometries","filter","val","properties","name","on","county_path","datum","centroid","sparse","recent","hot","cold","event","this","getAttribute","_","ref","Divider","TextContainer","MapControls","Button","LegendContainer","Legend","Cards","MapView","selectedCounty","setSelectedCounty","selectedState","setSelectedState","setTime","LisaContext","mapData","mapTitles","useState","Array","length","mapZoom","setMapZoom","zoomScale","setZoomScale","reset","zooming","forEach","m","currId","select","domain","d","Sparse","count","n","Math","max","countContainer","maxHeight","maxWidth","margin","min","pointData","x","r","remove","xAxis","range","yAxis","call","ticks","tickFormat","i","text","recentContainer","weekValues","keys","map","w","c","onClick","key","mapNum","selectedPage","to"],"mappings":"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","file":"component---src-pages-static-tsx-68172335c6d2ec78d024.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  background-color: lightgray;\n  width: 160px;\n  margin: 5px;\n  padding: 5px;\n`;\n\nconst Title = styled.h3`\n  margin: 0 0 10px 0;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\ntype Props = {\n  title: string;\n  hcount: number;\n  ccount: number;\n  hrecent: number;\n  crecent: number;\n};\n \nexport default function Card({\n  title,\n  hcount,\n  ccount,\n  hrecent,\n  crecent,\n}: Props) {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Row>\n        <Text># Hot Spots:</Text> <Text>{hcount}</Text>\n      </Row>\n      <Row>\n        <Text># Cold Spots:</Text><Text>{ccount}</Text>\n      </Row>\n      <Row>\n        <Text>Last Hot Spot:</Text><Text>{hrecent}</Text>\n      </Row>\n      <Row>\n        <Text>Last Cold Spot:</Text><Text>{crecent}</Text>\n      </Row>\n    </Container>\n  );\n}\n","import React, { createContext } from \"react\";\n\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\n\nimport countiesMap from \"us-atlas/counties-10m.json\";\n\nexport const MapsContext = createContext(null);\n\nexport const Maps = ({ children }) => {\n\n  const states = topojson.feature(countiesMap, countiesMap.objects.states).features\n  const counties = topojson.feature(countiesMap, countiesMap.objects.counties).features\n\n  return (\n    <MapsContext.Provider value={{ states, counties }}>\n      {children}\n    </MapsContext.Provider>\n  );\n};\n","import React, { useRef, useEffect, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\n\nimport { MapsContext } from \"../../contexts/mapsContext\";\nimport MapZoom from \"../../utility/mapZoom\";\nimport Sparse from \"../../utility/sparse\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  margin: 10px 20px;\n\n  @media (max-width: 830px) {\n    margin: 10px 5px;\n  }\n  @media (max-width: 700px) {\n    margin: 0;\n  }\n`;\nconst Title = styled.h3`\n  margin: 0;\n`;\n\nconst MapContainer = styled.svg`\n  g {\n    background-color: light-gray;\n    fill: red;\n  }\n\n  #c${({ county }: { county: number }) => county}.cboundary {\n    stroke: black;\n    stroke-width: 0.25px;\n  }\n\n  .cboundary {\n    stroke-width: 0px;\n    fill: #ffffff00;\n  }\n\n  .bubble {\n    stroke-width: 0;\n  }\n\n  border: 1px solid\n    ${({ border }: { border: boolean }) => (border ? \"black\" : \"white\")};\n`;\n\nconst getStateFips = (fips: number): number => {\n  return Number(String(fips).slice(0, -3));\n};\n\ntype MapSettings = {\n  width: number;\n  height: number;\n  translate: [number, number];\n  scale: number;\n};\n\ntype Data = Array<Sparse>;\n\ninterface Props {\n  title: string;\n  MapSettings: MapSettings;\n  countiesMap: any;\n  highlightedState: [number, string];\n  highlightedCounty: [number, string];\n  addState: (m: MapZoom) => void;\n  stateSelector: ([s, s1]: [number, string], b?: boolean) => boolean;\n  countySelector: ([s, s1]: [number, string]) => void;\n  data: Data;\n  time: [number, number];\n  colorScales: [any, any];\n  getRadius: (g: Sparse) => number;\n}\n\nconst Map = ({\n  title,\n  MapSettings,\n  countiesMap,\n  highlightedState,\n  highlightedCounty,\n  addState,\n  stateSelector,\n  countySelector,\n  data,\n  time,\n  colorScales: [hotScale, coldScale],\n  getRadius,\n}: Props) => {\n  const { width, height, translate, scale } = MapSettings;\n\n  const d3Container = useRef(null);\n\n  const projection = d3.geoAlbers().scale(scale).translate(translate);\n  const map_path = d3.geoPath().projection(projection);\n\n  const { counties, states } = useContext(MapsContext);\n\n  useEffect(() => {\n    const map_g = d3\n      .select(d3Container.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\");\n\n    addState(new MapZoom(map_path, map_g, width, height, highlightedState[0]));\n\n    // States:\n    map_g\n      .append(\"g\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"0.5px\")\n      .style(\"fill\", \"#ffffffff\")\n      .selectAll(\"path\")\n      .data(states)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", map_path as any)\n      .attr(\"stateFips\", ({ id }) => Number(id));\n\n    // Counties:\n    map_g\n      .append(\"g\")\n      .selectAll(\"path\")\n      .data(counties)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", map_path as any)\n      .attr(\"stateName\", ({ id }) => {\n        return countiesMap.objects.states.geometries.filter((val) => {\n          return getStateFips(id) === Number(val.id);\n        })[0].properties.name;\n      })\n      .attr(\"id\", ({ id }) => `c${Number(id)}`)\n      //   .attr(\"countyName\", ({ properties: { name } }) => name)\n      .attr(\"class\", \"cboundary\")\n      .on(\"mouseout\", () => {\n        countySelector([-1, \"\"]);\n      });\n\n    // County Circles:\n    map_g\n      .selectAll(\"circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"bubble\")\n      /* \n        HAVE TO LOAD COUNTY AND STATE NAME TO BUBBLES HERE:\n          MAYBE PUT THOSE AS SPARSE VECTOR INFO\n      */\n      .attr(\"countyName\", ({ fips }) => {\n        return countiesMap.objects.counties.geometries.filter(({ id }) => {\n          return fips === Number(id);\n        })[0].properties.name;\n      })\n      .attr(\"stateName\", ({ fips }) => {\n        return countiesMap.objects.states.geometries.filter(({ id }) => {\n          return getStateFips(fips) === Number(id);\n        })[0].properties.name;\n      })\n      .attr(\"transform\", ({ fips }) => {\n        const county_path = d3.select(`#c${fips}`).datum();\n        return `translate(${map_path.centroid(county_path)})`;\n      })\n      .on(\"mouseout\", () => {\n        countySelector([-1, \"\"]);\n      });\n  }, []);\n\n  useEffect(() => {\n    d3.selectAll(\".bubble\")\n      .attr(\"r\", getRadius)\n      .style(\"fill\", (sparse) => {\n        const [hot, cold] = sparse.recent(...time);\n        return hot > cold ? hotScale(hot) : coldScale(cold);\n      });\n  }, [time]);\n\n  useEffect(() => {\n    d3.selectAll(\".cboundary\").on(\"click\", function (event, { id }) {\n      stateSelector([getStateFips(id), this.getAttribute(\"stateName\")]);\n    });\n\n    d3.selectAll(\".cboundary\").on(\n      \"mouseover\",\n      function (event, { id, properties: { name } }) {\n        if (highlightedState[1] !== \"\") {\n          countySelector([Number(id), name]);\n        }\n      }\n    );\n\n    d3.selectAll(\".bubble\")\n      .on(\"mouseover\", function (_, { fips }) {\n        if (!highlightedState) {\n          return;\n        }\n        // console.log(getStateFips(d.fips), highlightedState[0])\n        if (highlightedState[1] !== \"\") {\n          countySelector([fips, this.getAttribute(\"countyName\")]);\n        }\n      })\n      .on(\"click\", function (event, { fips }) {\n        stateSelector([getStateFips(fips), this.getAttribute(\"stateName\")]);\n      })\n      .style(\"fill-opacity\", ({ fips }) => {\n        return highlightedState[0] === -1 ||\n          getStateFips(fips) === highlightedState[0]\n          ? 1\n          : 0.2;\n      });\n  }, [highlightedState]);\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <MapContainer\n        ref={d3Container}\n        county={highlightedCounty[0]}\n        border={highlightedState[0] !== -1}\n      />\n    </Container>\n  );\n};\n\nexport default Map;\n","import React, { useRef, useEffect, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport * as d3 from \"d3\";\n\n//import us from \"us-atlas/nation-10m.json\"\nimport counties from \"us-atlas/counties-10m.json\";\nimport states from \"us-atlas/states-10m.json\";\n//import data from \"../data/counties.json\";\n\nimport MapZoom from \"../../utility/mapZoom\";\nimport Sparse from \"../../utility/sparse\";\nimport Card from \"./cards\";\nimport Map from \"./map\";\nimport { LisaContext } from \"../../contexts/lisaContext\";\n\nimport { Maps } from \"../../contexts/mapsContext\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\nconst Divider = styled.hr`\n  width: 98%;\n  height: 1px;\n  background-color: black;\n  border-radius: 1px;\n  margin: 5px 10px;\n`;\n\nconst TextContainer = styled.div`\n  width: 98%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst MapControls = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst MapContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n\n  width: 100%;\n  flex-wrap: wrap;\n\n  @media (max-width: 770px) {\n    flex-wrap: wrap;\n  }\n`;\n\nconst Button = styled.button`\n  border-radius: 10px;\n  height: 30px;\n  width: 60px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: center;\n\n  width: 100%;\n  flex-wrap: wrap;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  width: 100%;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  white-space: nowrap;\n`;\n\nconst LegendContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  @media (max-width: 770px) {\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n`;\n\nconst Legend = styled.div`\n  margin: 10px 0;\n  width: 380px;\n  display: flex;\n  justify-content: center;\n  align-itms: center;\n`;\n\nconst Cards = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n`;\n\ntype MapSettings = {\n  width: number;\n  height: number;\n  translate: [number, number];\n  scale: number;\n};\n\ntype Data = Array<Sparse>;\n\ntype Props = {\n  MapSettings: MapSettings;\n  selectedCounty: [number, string];\n  setSelectedCounty: ([s1, s2]: [number, string]) => void;\n  selectedState: [number, string];\n  setSelectedState: ([s1, s2]: [number, string]) => void;\n  time: [number, number];\n  setTime: ([n1, n2]: [number, number]) => void;\n};\n\nconst getStateFips = (fips: number): number => {\n  return Number(String(fips).slice(0, -3));\n};\n\nexport default function MapView({\n  MapSettings,\n  selectedCounty,\n  setSelectedCounty,\n  selectedState,\n  setSelectedState,\n  time,\n  setTime,\n}: Props) {\n  const { mapData, mapTitles } = useContext(LisaContext);\n\n  const [mapZoom, setMapZoom] = useState(Array<MapZoom>(mapTitles.length));\n\n  const addState = (m: MapZoom, mapNum: number) => {\n    mapZoom[mapNum] = m;\n    setMapZoom(mapZoom);\n  };\n\n  const [zoomScale, setZoomScale] = useState(1);\n\n  const stateSelector = (\n    [id, name]: [number, string],\n    reset: boolean = false\n  ) => {\n    let zooming: boolean;\n\n    mapZoom.forEach((m) => {\n      if (!reset && id !== m.currId && id !== -1) {\n        setZoomScale(m.select(id));\n        zooming = true;\n      } else {\n        m.reset();\n        setZoomScale(1);\n        zooming = false;\n      }\n    });\n\n    if (zooming) {\n      setSelectedState([id, name]);\n      return true;\n    } else {\n      setSelectedState([-1, \"\"]);\n      return false;\n    }\n  };\n\n  const countySelector = ([id, name]: [number, string]) => {\n    if (id === -1 || getStateFips(id) === selectedState[0]) {\n      setSelectedCounty([id, name]);\n    }\n  };\n\n  const coldScale = d3\n    .scaleSequentialPow(d3.interpolateBlues)\n    .domain([...time]);\n  const hotScale = d3.scaleSequentialPow(d3.interpolateReds).domain([...time]);\n\n  const getRadius = (d: Sparse | number) => {\n    const val = d instanceof Sparse ? d.count(...time) : [d];\n    const n = d instanceof Sparse ? d.n : time[1];\n    return (30 + Math.max(...val)) / n;\n  };\n\n  const countContainer = useRef(null);\n\n  const maxHeight = 100;\n  const maxWidth = 370;\n  const margin = [20, 20];\n\n  useEffect(() => {\n    const width = Math.min(maxWidth, 100 + zoomScale * 10) - 2 * margin[0];\n    const height = Math.min(maxHeight, 40 + zoomScale * 2);\n\n    const pointData = [\n      { x: 1, r: 1 },\n      { x: 2, r: 5 },\n      { x: 3, r: 10 },\n      { x: 4, r: 20 },\n      { x: 5, r: 52 },\n    ];\n\n    d3.select(countContainer.current).selectAll(\"*\").remove();\n\n    const map_g = d3\n      .select(countContainer.current)\n      .style(\"width\", width + (7 / 2) * margin[0])\n      .style(\"height\", height + 2 * margin[1])\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin[0]},0)`);\n\n    const xAxis = d3\n      .scaleLinear()\n      .domain([1, pointData[pointData.length - 1].x])\n      .range([0, width]);\n    const yAxis = d3.scaleLinear().domain([0, 1]).range([height, 0]);\n\n    map_g\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        `translate(0,${(margin[1] * 3) / 2 + (zoomScale * 5) / 2})`\n      )\n      .call(\n        d3\n          .axisBottom(xAxis)\n          .ticks(5)\n          .tickFormat((i) => String(pointData[i - 1].r))\n      );\n\n    map_g\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin[0]},0)`)\n      .call(d3.axisLeft(yAxis))\n      .style(\"display\", \"none\");\n\n    map_g\n      .selectAll(\"dot\")\n      .remove()\n      .data(pointData)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"cx\", ({ x }) => xAxis(x))\n      .attr(\"cy\", () => yAxis(0.5))\n      .attr(\"r\", ({ r }) => getRadius(r) * zoomScale)\n      .style(\"fill\", \"black\");\n\n    map_g\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width / 2 + margin[0])\n      .attr(\"y\", height + (margin[1] * 3) / 2 + zoomScale / 4)\n      .text(\"Count\");\n  }, [time, zoomScale]);\n\n  const recentContainer = useRef(null);\n\n  useEffect(() => {\n    d3.select(recentContainer.current).selectAll(\"*\").remove();\n\n    const leftMargin = 30;\n\n    const map_g = d3\n      .select(recentContainer.current)\n      .style(\"width\", maxWidth)\n      .style(\"height\", maxHeight)\n      // .style(\"background-color\", \"lightgray\")\n      .append(\"g\")\n      .attr(\"transform\", `translate(${leftMargin + margin[0]},0)`);\n\n    const weekValues = [1, 5, 10, 15, 20, 25, 30, 40, 46, 52];\n\n    const pointData = [...Array(weekValues.length * 2).keys()].map((i) => {\n      return {\n        x: (i % weekValues.length) + 1,\n        w: weekValues[i % weekValues.length],\n        c: i < weekValues.length ? 1 : 2,\n      };\n    });\n\n    const xAxis = d3\n      .scaleLinear()\n      .domain([1, weekValues.length])\n      .range([0, maxWidth - 2 * margin[0] - leftMargin]);\n    const yAxis = d3\n      .scaleLinear()\n      .domain([0, 3])\n      .range([maxHeight - 2 * margin[1], 0]);\n\n    map_g\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${margin[1] + (maxHeight * 5) / 12})`)\n      .call(\n        d3\n          .axisBottom(xAxis)\n          .ticks(5)\n          .tickFormat((i) => String(pointData[i - 1].w))\n      );\n\n    map_g\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin[0]},0)`)\n      .call(d3.axisLeft(yAxis))\n      .style(\"display\", \"none\");\n\n    map_g\n      .selectAll(\"dot\")\n      .remove()\n      .data(pointData)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"cx\", ({ x }) => xAxis(x))\n      .attr(\"cy\", ({ c }) => yAxis(c))\n      .attr(\"r\", () => 9)\n      .style(\"fill\", ({ c, w }) => (c === 1 ? hotScale(w) : coldScale(w)));\n\n    map_g\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", maxWidth / 2 + leftMargin)\n      .attr(\"y\", (maxHeight * 19) / 20)\n      .text(\"Week Number\");\n\n    map_g\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", -leftMargin / 2)\n      .attr(\"y\", maxHeight / 2 - 5)\n      .text(\"Hot\");\n\n    map_g\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", -leftMargin / 2)\n      .attr(\"y\", maxHeight / 4)\n      .text(\"Cold\");\n  }, [time, zoomScale]);\n\n  // useEffect(() => {\n  //   d3\n  //     .select(d3Container.current)\n  //     .selectAll(\".point\")\n  //     .attr(\"r\", ({ r }) => getRadius(r) * zoomScale)\n  // }, [time, zoomScale])\n\n  return (\n    <Container>\n      <TextContainer>\n        {selectedState[0] !== -1 ? (\n          <MapControls>\n            <Title>Selected State: {selectedState[1]}</Title>\n            <Text>Highlight over a county to read its specific values.</Text>\n          </MapControls>\n        ) : (\n          <Text>\n            Click a state on the map to zoom in and see county specific\n            information.\n          </Text>\n        )}\n        {selectedState[0] !== -1 ? (\n          <Button\n            onClick={() => {\n              stateSelector([-1, \"\"], true);\n            }}\n          >\n            Reset\n          </Button>\n        ) : null}\n      </TextContainer>\n      <Divider />\n      <Maps>\n        <MapContainer>\n          {mapTitles.map((title, i) => {\n            return (\n              <Map\n                key={i}\n                MapSettings={MapSettings}\n                title={title}\n                countiesMap={counties}\n                highlightedCounty={selectedCounty}\n                highlightedState={selectedState}\n                addState={(m: MapZoom) => addState(m, i)}\n                stateSelector={stateSelector}\n                countySelector={countySelector}\n                time={time}\n                data={mapData ? mapData[i] : null}\n                colorScales={[hotScale, coldScale]}\n                getRadius={getRadius}\n              />\n            );\n          })}\n        </MapContainer>\n      </Maps>\n      <Row>\n        {selectedCounty[1] ? (\n          <Title>Selected County: {selectedCounty[1]} County</Title>\n        ) : null}\n      </Row>\n      <Cards>\n        {selectedCounty[0] !== -1\n          ? [0, 2, 1, 3].map((i) => {\n              const county = mapData\n                ? mapData[i].filter(\n                    (d) => Number(d.fips) === Number(selectedCounty[0])\n                  )[0]\n                : false;\n\n              const [hcount, ccount] = county ? county.count(...time) : [0, 0];\n              const [hrecent, crecent] = county\n                ? county.recent(...time)\n                : [0, 0];\n\n              return (\n                <Card\n                  key={i}\n                  title={mapTitles[i]}\n                  hcount={hcount}\n                  ccount={ccount}\n                  hrecent={hrecent}\n                  crecent={crecent}\n                />\n              );\n            })\n          : null}\n      </Cards>\n      <LegendContainer>\n        <Legend>\n          <svg ref={recentContainer} />\n        </Legend>\n        <Legend>\n          <svg ref={countContainer} />\n        </Legend>\n      </LegendContainer>\n    </Container>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nimport MapView from \"../components/trivar/mapView\";\nimport ScatterView from \"../components/trivar/scatterView\";\nimport Slider from \"../components/trivar/slider\";\nimport Page from \"../components/page\";\n\nimport Sparse from \"../utility/sparse\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  width: 100%;\n\n  & > h1 {\n    margin: 5px 5px 0 5px;\n  }\n`;\n\nconst Divider = styled.hr`\n  width: 98%;\n  height: 1px;\n  background-color: black;\n  border-radius: 1px;\n  margin: 5px 10px;\n`;\nconst Text = styled.p`\n  margin: 5px;\n`;\nconst Trivariate = () => {\n  const width = 380;\n  const height = 250;\n  const mapsTranslate: [number, number] = [width / 2 - 5, height / 2];\n  const mapsScale = 500;\n\n  const MapSettings = {\n    width: width - 10,\n    height,\n    translate: mapsTranslate,\n    scale: mapsScale,\n  };\n\n  const [selectedCounty, setSelectedCounty] = useState<[number, string]>([\n    -1,\n    \"\",\n  ]);\n\n  const [selectedState, setSelectedState] = useState<[number, string]>([\n    -1,\n    \"\",\n  ]);\n\n  const [time, setTime] = useState<[number, number]>([0, 52]);\n\n  return (\n    <Page selectedPage=\"Static\">\n      <Container>\n        <TextContainer>\n          <h1>Static Choropleth Maps</h1>\n          <Text>\n            This page provides a static representation of the{\" \"}\n            <Link to=\"/animated\">animated choropleth maps</Link> by using\n            symbols to show the temporal aspects in a single view. Counties that\n            were either a hot spot or cold spot at least once in 2020 have a\n            circle over them. If the circle is colored blue then the county was\n            a cold spot at some point in time and if it is color red it was a\n            hot spot. The radius of the circle shows the number of times that\n            county was a hot or cold spot in the given period. A circle with a\n            larger radius indicates that it was a hot spot or cold spot more\n            times in the year. A darker color shows the last time the county was\n            a hot spot or cold spot was later in the year while a lighter color\n            means the last time the county was a hot spot or cold spot was\n            earlier in the year.\n          </Text>\n        </TextContainer>\n        <Divider />\n        <MapView\n          MapSettings={MapSettings}\n          selectedCounty={selectedCounty}\n          setSelectedCounty={setSelectedCounty}\n          selectedState={selectedState}\n          setSelectedState={setSelectedState}\n          time={time}\n          setTime={setTime}\n        />\n        <Divider />\n        {/*<Slider time={time} setTime={setTime}/>*/}\n        {/*<p>State Selected: {selectedState[1]}</p>*/}\n      </Container>\n    </Page>\n  );\n};\n\nexport default Trivariate;\n"],"sourceRoot":""}