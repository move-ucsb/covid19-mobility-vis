{"version":3,"sources":["webpack://my-gatsby-site/./src/components/trivar/cards.tsx","webpack://my-gatsby-site/./src/components/trivar/map1.tsx","webpack://my-gatsby-site/./src/components/trivar/mapView1.tsx","webpack://my-gatsby-site/./src/pages/trivar1.tsx"],"names":["Container","styled","Title","Text","Row","Card","title","hcount","ccount","hrecent","crecent","MapContainer","county","border","getStateFips","fips","Number","String","slice","MapSettings","countiesMap","highlightedState","highlightedCounty","addState","stateSelector","countySelector","data","time","colorScales","hotScale","coldScale","getRadius","width","height","translate","scale","d3Container","useRef","projection","d3","map_path","useEffect","map_g","current","attr","append","MapZoom","style","selectAll","topojson","objects","states","features","enter","id","counties","geometries","filter","val","properties","name","on","county_path","datum","centroid","sparse","count","changes","event","this","getAttribute","_","ref","Button","Cards","MapView1","selectedCounty","setSelectedCounty","selectedState","setSelectedState","setTime","useContext","LisaContext","mapData","mapTitles","useState","Array","length","mapZoom","setMapZoom","zoomScale","setZoomScale","reset","zooming","forEach","m","currId","select","domain","d","Sparse","n","Math","max","countContainer","maxHeight","maxWidth","margin","min","pointData","x","r","remove","xAxis","range","yAxis","call","ticks","tickFormat","i","text","recentContainer","weekValues","keys","map","w","c","key","mapNum","recent","onClick","selectedPage"],"mappings":"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","file":"component---src-pages-trivar-1-tsx-0c3bbc92d061cf4f7cbd.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  background-color: lightgray;\n  width: 160px;\n  margin: 5px;\n  padding: 5px;\n`;\n\nconst Title = styled.h3`\n  margin: 0 0 10px 0;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\ntype Props = {\n  title: string;\n  hcount: number;\n  ccount: number;\n  hrecent: number;\n  crecent: number;\n};\n \nexport default function Card({\n  title,\n  hcount,\n  ccount,\n  hrecent,\n  crecent,\n}: Props) {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Row>\n        <Text># Hot Spots:</Text> <Text>{hcount}</Text>\n      </Row>\n      <Row>\n        <Text># Cold Spots:</Text><Text>{ccount}</Text>\n      </Row>\n      <Row>\n        <Text>Last Hot Spot:</Text><Text>{hrecent}</Text>\n      </Row>\n      <Row>\n        <Text>Last Cold Spot:</Text><Text>{crecent}</Text>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useRef, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\n\nimport MapZoom from \"../../utility/mapZoom\";\nimport Sparse from \"../../utility/sparse\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin: 10px;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n`;\n\nconst MapContainer = styled.svg`\n  g {\n    background-color: light-gray;\n    fill: red;\n  }\n  border: 1px solid black;\n\n  #c${({ county }: { county: number }) => county}.cboundary {\n    stroke: black;\n    stroke-width: 0.25px;\n  }\n\n  .cboundary {\n    stroke-width: 0px;\n    fill: #ffffff00;\n  }\n\n  .bubble {\n    stroke-width: 0;\n  }\n  border: 1px solid ${({ border }: { border: boolean }) => (border ? \"black\" : \"white\")};\n`;\n\nconst getStateFips = (fips: number): number => {\n  return Number(String(fips).slice(0, -3));\n};\n\ntype MapSettings = {\n  width: number;\n  height: number;\n  translate: [number, number];\n  scale: number;\n};\n\ntype Data = Array<Sparse>;\n\ninterface Props {\n  title: string;\n  MapSettings: MapSettings;\n  countiesMap: any;\n  highlightedState: [number, string];\n  highlightedCounty: [number, string];\n  addState: (m: MapZoom) => void;\n  stateSelector: ([s, s1]: [number, string], b?: boolean) => boolean;\n  countySelector: ([s, s1]: [number, string]) => void;\n  data: Data;\n  time: [number, number];\n  colorScales: [any, any];\n  getRadius: (g: Sparse) => number;\n}\n\nconst Map1 = ({\n  title,\n  MapSettings,\n  countiesMap,\n  highlightedState,\n  highlightedCounty,\n  addState,\n  stateSelector,\n  countySelector,\n  data,\n  time,\n  colorScales: [hotScale, coldScale],\n  getRadius,\n}: Props) => {\n  const { width, height, translate, scale } = MapSettings;\n\n  const d3Container = useRef(null);\n\n  const projection = d3.geoAlbers().scale(scale).translate(translate);\n  const map_path = d3.geoPath().projection(projection);\n\n  useEffect(() => {\n    const map_g = d3\n      .select(d3Container.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\");\n\n    addState(new MapZoom(map_path, map_g, width, height, highlightedState[0]));\n\n    // States:\n    map_g\n      .append(\"g\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"0.5px\")\n      .style(\"fill\", \"#ffffffff\")\n      .selectAll(\"path\")\n      .data(topojson.feature(countiesMap, countiesMap.objects.states).features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", map_path as any)\n      .attr(\"stateFips\", ({ id }) => Number(id));\n\n    // Counties:\n    map_g\n      .append(\"g\")\n      .selectAll(\"path\")\n      .data(\n        topojson.feature(countiesMap, countiesMap.objects.counties).features\n      )\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", map_path as any)\n      .attr(\"stateName\", ({ id }) => {\n        return countiesMap.objects.states.geometries.filter((val) => {\n          return getStateFips(id) === Number(val.id);\n        })[0].properties.name;\n      })\n      .attr(\"id\", ({ id }) => `c${Number(id)}`)\n      //   .attr(\"countyName\", ({ properties: { name } }) => name)\n      .attr(\"class\", \"cboundary\")\n      .on(\"mouseout\", () => {\n        countySelector([-1, \"\"]);\n      });\n\n    // County Circles:\n    map_g\n      .selectAll(\"circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"bubble\")\n      /* \n        HAVE TO LOAD COUNTY AND STATE NAME TO BUBBLES HERE:\n          MAYBE PUT THOSE AS SPARSE VECTOR INFO\n      */\n      .attr(\"countyName\", ({ fips }) => {\n        return countiesMap.objects.counties.geometries.filter(({ id }) => {\n          return fips === Number(id);\n        })[0].properties.name;\n      })\n      .attr(\"stateName\", ({ fips }) => {\n        return countiesMap.objects.states.geometries.filter(({ id }) => {\n          return getStateFips(fips) === Number(id);\n        })[0].properties.name;\n      })\n      .attr(\"transform\", ({ fips }) => {\n        const county_path = d3.select(`#c${fips}`).datum();\n        return `translate(${map_path.centroid(county_path)})`;\n      })\n      .on(\"mouseout\", () => {\n        countySelector([-1, \"\"]);\n      });\n  }, []);\n\n  useEffect(() => {\n    d3.selectAll(\".bubble\")\n      .attr(\"r\", getRadius)\n      .style(\"fill\", (sparse) => {\n        const [hot, cold] = sparse.count(...time)\n        return hot > cold ? hotScale(1 / sparse.changes(...time)) : coldScale(1 / sparse.changes(...time))\n      });\n  }, [time]);\n\n  useEffect(() => {\n    d3.selectAll(\".cboundary\").on(\"click\", function (event, { id }) {\n      stateSelector([getStateFips(id), this.getAttribute(\"stateName\")]);\n    });\n\n    d3.selectAll(\".cboundary\").on(\n      \"mouseover\",\n      function (event, { id, properties: { name } }) {\n        if (highlightedState[1] !== \"\") {\n          countySelector([Number(id), name]);\n        }\n      }\n    );\n\n    d3.selectAll(\".bubble\")\n      .on(\"mouseover\", function (_, { fips }) {\n        if (!highlightedState) {\n          return;\n        }\n        // console.log(getStateFips(d.fips), highlightedState[0])\n        if (highlightedState[1] !== \"\") {\n          countySelector([fips, this.getAttribute(\"countyName\")]);\n        }\n      })\n      .on(\"click\", function (event, { fips }) {\n        stateSelector([getStateFips(fips), this.getAttribute(\"stateName\")]);\n      })\n      .style(\"fill-opacity\", ({ fips }) => {\n        return highlightedState[0] === -1 ||\n          getStateFips(fips) === highlightedState[0]\n          ? 1\n          : 0.2;\n      });\n  }, [highlightedState]);\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <MapContainer ref={d3Container} county={highlightedCounty[0]}  border={highlightedState[0] !== -1}/>\n    </Container>\n  );\n};\n\nexport default Map1;\n","import React, { useRef, useEffect, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport * as d3 from \"d3\";\n\nimport counties from \"us-atlas/counties-10m.json\";\n\nimport MapZoom from \"../../utility/mapZoom\";\nimport Sparse from \"../../utility/sparse\";\nimport Card from \"./cards\";\nimport Map1 from \"./map1\";\nimport { LisaContext } from \"../../contexts/lisaContext\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst MapContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n\n  width: 100%;\n  flex-wrap: wrap;\n\n  @media (max-width: 770px) {\n    flex-wrap: wrap;\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n\n  width: 100%;\n  flex-wrap: wrap;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  width: 100px;\n  white-space: nowrap;\n`;\n\nconst Button = styled.button`\n  width: 50px;\n`;\n\nconst LegendContainer = styled.div`\n  width: 800px;\n  display: flex;\n  height: auto;\n`;\n\nconst Legend = styled.div`\n  margin: 10px;\n  width: 390px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Cards = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  width: 70%;\n`;\n\ntype MapSettings = {\n  width: number;\n  height: number;\n  translate: [number, number];\n  scale: number;\n};\n\ntype Data = Array<Sparse>;\n\ntype Props = {\n  MapSettings: MapSettings;\n  selectedCounty: [number, string];\n  setSelectedCounty: ([s1, s2]: [number, string]) => void;\n  selectedState: [number, string];\n  setSelectedState: ([s1, s2]: [number, string]) => void;\n  time: [number, number];\n  setTime: ([n1, n2]: [number, number]) => void;\n};\n\nconst getStateFips = (fips: number): number => {\n  return Number(String(fips).slice(0, -3));\n};\n\nexport default function MapView1({\n  MapSettings,\n  selectedCounty,\n  setSelectedCounty,\n  selectedState,\n  setSelectedState,\n  time,\n  setTime,\n}: Props) {\n  const { mapData, mapTitles } = useContext(LisaContext)\n\n  const [mapZoom, setMapZoom] = useState(Array<MapZoom>(mapTitles.length));\n\n  const addState = (m: MapZoom, mapNum: number) => {\n    mapZoom[mapNum] = m;\n    setMapZoom(mapZoom);\n  };\n\n  const [zoomScale, setZoomScale] = useState(1);\n\n  const stateSelector = (\n    [id, name]: [number, string],\n    reset: boolean = false\n  ) => {\n    let zooming: boolean;\n\n    mapZoom.forEach((m) => {\n      if (!reset && id !== m.currId && id !== -1) {\n        setZoomScale(m.select(id));\n        zooming = true;\n      } else {\n        m.reset();\n        setZoomScale(1);\n        zooming = false;\n      }\n    });\n\n    if (zooming) {\n      setSelectedState([id, name]);\n      return true;\n    } else {\n      setSelectedState([-1, \"\"]);\n      return false;\n    }\n  };\n\n  const countySelector = ([id, name]: [number, string]) => {\n    if (id === -1 || getStateFips(id) === selectedState[0]) {\n      setSelectedCounty([id, name]);\n    }\n  };\n\n  const coldScale = d3\n    .scaleSequential(d3.interpolateBlues)\n    .domain([-0.5, 1]);\n  const hotScale = d3.scaleSequential(d3.interpolateReds).domain([-0.5, 1]);\n\n  const getRadius = (d: Sparse | number) => {\n    const val = d instanceof Sparse ? d.count(...time) : [d];\n    const n = d instanceof Sparse ? d.n : time[1];\n    return (30 + Math.max(...val)) / n;\n  };\n\n  const countContainer = useRef(null);\n\n  const maxHeight = 100;\n  const maxWidth = 380;\n  const margin = [20, 20];\n\n  useEffect(() => {\n    const width = Math.min(maxWidth, 100 + zoomScale * 10) - 2 * margin[0];\n    const height = Math.min(maxHeight, 40 + zoomScale * 2);\n\n    const pointData = [\n      { x: 1, r: 1 },\n      { x: 2, r: 5 },\n      { x: 3, r: 10 },\n      { x: 4, r: 20 },\n      { x: 5, r: 52 },\n    ];\n\n    d3.select(countContainer.current).selectAll(\"*\").remove();\n\n    const map_g = d3\n      .select(countContainer.current)\n      .style(\"width\", width + (7 / 2) * margin[0])\n      .style(\"height\", height + 2 * margin[1])\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin[0]},0)`);\n\n    const xAxis = d3.scaleLinear().domain([1, pointData[pointData.length - 1].x]).range([0, width]);\n    const yAxis = d3.scaleLinear().domain([0, 1]).range([height, 0]);\n\n    map_g\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        `translate(0,${(margin[1] * 3) / 2 + (zoomScale * 5) / 2})`\n      )\n      .call(\n        d3\n          .axisBottom(xAxis)\n          .ticks(5)\n          .tickFormat((i) => String(pointData[i - 1].r))\n      );\n\n    map_g\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin[0]},0)`)\n      .call(d3.axisLeft(yAxis))\n      .style(\"display\", \"none\");\n\n    map_g\n      .selectAll(\"dot\")\n      .remove()\n      .data(pointData)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"cx\", ({ x }) => xAxis(x))\n      .attr(\"cy\", () => yAxis(0.5))\n      .attr(\"r\", ({ r }) => getRadius(r) * zoomScale)\n      .style(\"fill\", \"black\");\n\n    map_g\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width / 2 + margin[0])\n      .attr(\"y\", height + (margin[1] * 3) / 2 + zoomScale / 4)\n      .text(\"Count\");\n  }, [time, zoomScale]);\n\n  const recentContainer = useRef(null);\n\n  useEffect(() => {\n    d3.select(recentContainer.current).selectAll(\"*\").remove();\n\n    const leftMargin = 30;\n\n    const map_g = d3\n      .select(recentContainer.current)\n      .style(\"width\", maxWidth)\n      .style(\"height\", maxHeight)\n      // .style(\"background-color\", \"lightgray\")\n      .append(\"g\")\n      .attr(\"transform\", `translate(${leftMargin + margin[0]},0)`);\n\n    const weekValues = [1, 5, 10, 15, 20, 25, 30, 40, 46, 52];\n\n    const pointData = [...Array(weekValues.length * 2).keys()].map((i) => {\n      return {\n        x: (i % weekValues.length) + 1,\n        w: weekValues[i % weekValues.length],\n        c: i < weekValues.length ? 1 : 2,\n      };\n    });\n\n    const xAxis = d3\n      .scaleLinear()\n      .domain([1, weekValues.length])\n      .range([0, maxWidth - 2 * margin[0] - leftMargin]);\n    const yAxis = d3\n      .scaleLinear()\n      .domain([0, 3])\n      .range([maxHeight - 2 * margin[1], 0]);\n\n    map_g\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${margin[1] + (maxHeight * 5) / 12})`)\n      .call(\n        d3\n          .axisBottom(xAxis)\n          .ticks(5)\n          .tickFormat((i) => String(pointData[i - 1].w))\n      );\n\n    map_g\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin[0]},0)`)\n      .call(d3.axisLeft(yAxis))\n      .style(\"display\", \"none\");\n\n    map_g\n      .selectAll(\"dot\")\n      .remove()\n      .data(pointData)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"cx\", ({ x }) => xAxis(x))\n      .attr(\"cy\", ({ c }) => yAxis(c))\n      .attr(\"r\", () => 9)\n      .style(\"fill\", ({ c, w }) => (c === 1 ? hotScale(w) : coldScale(w)));\n\n    map_g\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", maxWidth / 2 + leftMargin)\n      .attr(\"y\", (maxHeight * 19) / 20)\n      .text(\"Week Number\");\n\n    map_g\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", -leftMargin / 2)\n      .attr(\"y\", maxHeight / 2 - 5)\n      .text(\"Hot\");\n\n    map_g\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", -leftMargin / 2)\n      .attr(\"y\", maxHeight / 4)\n      .text(\"Cold\");\n  }, [time, zoomScale]);\n\n  // useEffect(() => {\n  //   d3\n  //     .select(d3Container.current)\n  //     .selectAll(\".point\")\n  //     .attr(\"r\", ({ r }) => getRadius(r) * zoomScale)\n  // }, [time, zoomScale])\n\n  return (\n    <Container>\n      <Text>Selected State: {selectedState[1]}</Text>\n      <MapContainer>\n        {mapTitles.map((title, i) => {\n          return (\n            <Map1\n              key={i}\n              MapSettings={MapSettings}\n              title={title}\n              countiesMap={counties}\n              highlightedCounty={selectedCounty}\n              highlightedState={selectedState}\n              addState={(m: MapZoom) => addState(m, i)}\n              stateSelector={stateSelector}\n              countySelector={countySelector}\n              time={time}\n              data={mapData ? mapData[i] : null}\n              colorScales={[hotScale, coldScale]}\n              getRadius={getRadius}\n            />\n          );\n        })}\n      </MapContainer>\n      <Text>{selectedCounty[1] ? `Selected County: ${selectedCounty[1]} County` : \"\"}</Text>\n      <Cards>\n        {selectedCounty[0] !== -1\n          ? [0, 1, 2, 3].map((i) => {\n              const county = mapData\n                ? mapData[i].filter(\n                    (d) => Number(d.fips) === Number(selectedCounty[0])\n                  )[0]\n                : false;\n\n              const [hcount, ccount] = county ? county.count(...time) : [0, 0];\n              const [hrecent, crecent] = county\n                ? county.recent(...time)\n                : [0, 0];\n\n              return (\n                <Card\n                  key={i}\n                  title={mapTitles[i]}\n                  hcount={hcount}\n                  ccount={ccount}\n                  hrecent={hrecent}\n                  crecent={crecent}\n                />\n              );\n            })\n          : null}\n      </Cards>\n      <Row>\n        <Button\n          onClick={() => {\n            stateSelector([-1, \"\"], true);\n          }}\n        >\n          Reset\n        </Button>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport MapView1 from \"../components/trivar/mapView1\";\nimport ScatterView from \"../components/trivar/scatterView\";\nimport Slider from \"../components/trivar/slider\";\nimport Page from \"../components/page\";\n\nimport Sparse from \"../utility/sparse\";\n\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Trivariate1 = () => {\n\n  const width = 380;\n  const height = 250;\n  const mapsTranslate: [number, number] = [width / 2, height / 2];\n  const mapsScale = 500;\n\n  const MapSettings = {\n    width,\n    height,\n    translate: mapsTranslate,\n    scale: mapsScale,\n  };\n\n  const [selectedCounty, setSelectedCounty] = useState<[number, string]>([\n    -1,\n    \"\",\n  ]);\n\n  const [selectedState, setSelectedState] = useState<[number, string]>([\n    -1,\n    \"\",\n  ]);\n\n  const [time, setTime] = useState<[number, number]>([0, 52])\n\n  return (\n    <Page selectedPage=\"Static1\">\n      <Container>\n        <p>Darker color means fewer number of changes</p>\n        <p>Bigger Radius means more counts</p>\n        <MapView1\n          MapSettings={MapSettings}\n          selectedCounty={selectedCounty}\n          setSelectedCounty={setSelectedCounty}\n          selectedState={selectedState}\n          setSelectedState={setSelectedState}\n          time={time}\n          setTime={setTime}\n        />\n        {/*<Slider time={time} setTime={setTime}/>*/}\n        {/*<p>State Selected: {selectedState[1]}</p>*/}\n        <hr style={{ width: \"100%\"}}/>\n        <p>I think this would end up having a triangular look with one side on yaxis and other vertex above positive x</p>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Trivariate1;\n"],"sourceRoot":""}